<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.hp</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.hurt</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>108</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_friction</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0.55</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//global.crystal_score = 10;
//Variables regarding the overheating system
bary1 = y-43;
bary2 = y-6;
heat = 0;
heat_bar_height = bary2-bary1;
toCool = true;
//Variables regarding the overheating system


display_width=display_get_width();
display_height=display_get_height();

moveUp=virtual_key_add(0,0,display_width-sprite_get_width(right_button)*global.gui_xscale,sprite_get_height(up_button)*global.gui_xscale,vk_up);

moveLeft=virtual_key_add(0,0,sprite_get_width(left_button)*global.gui_xscale,
display_height-sprite_get_height(down_button)*global.gui_yscale,vk_left);

moveDown=virtual_key_add(0,display_height-sprite_get_height(down_button)*global.gui_yscale,
display_width,sprite_get_height(down_button)*global.gui_yscale,vk_down);

moveRight=virtual_key_add(display_width-sprite_get_width(right_button)*global.gui_xscale,sprite_get_height(up_button)*global.gui_yscale,
sprite_get_width(right_button)*global.gui_xscale,display_height-sprite_get_height(down_button)*global.gui_yscale,vk_right);

flag=1;//If to draw the sprite,for when the player is hurt

shake = 0;//By how much to shake the screen when a mine is nearby














</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creating the virtual key
dw = display_get_width();
dh = display_get_height();
xx = dw/2;
yy = dh*0.875;
virtual_key_add(0,dh*0.75,dw,dh*0.25,vk_up);
shoot_down = true;
shoot_up = true;
shoot_left = true;
shoot_right = true;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Declaring cid
cid = noone;//The ID of the crystal the player is colliding with.
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room_speed*0.5</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shoot_right</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>true</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shoot_left</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>true</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shoot_up</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>true</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shoot_down</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>true</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///toCool = true; heat = 0;
toCool = true;
heat = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handling the cooling
if(toCool)
    if(heat&gt;0)
        heat-=3;
if(heat&lt;0) heat = 0;
alarm[1] = room_speed*0.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.hurt</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>flag</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Second control scheme: following the player's finger
if(device_mouse_check_button(0, mb_left) &amp;&amp; device_mouse_y(0)&gt;=dh*0.75)
{
    //direction = point_direction(xx,yy,mouse_x,mouse_y);
    if(mouse_y&lt;yy)
    { 
        if(shoot_down)
        {   
            shoot_down = false;
            alarm[3]=room_speed*0.2;
            inst=instance_create(x,y+16,parent_blast);
            with(inst)
            {
                speed = 32;
                direction = 270;
            }
            if(heat&lt;100 &amp;&amp; instance_number(bonus_on)==0)
                heat+=2;
        }
        vspeed-=(point_distance(xx,yy,mouse_x,mouse_y)/dh)*(8-floor(heat/100)*3);
    }
    else if(device_mouse_y(0)&gt;yy)
    { 
        if(shoot_up)
        {
            shoot_up=false;
            alarm[4]=room_speed*0.2;
            inst=instance_create(x,y-16,parent_blast);
            with(inst)
            {
                speed = 32;
                direction = 90;
            }
            if(heat&lt;100 &amp;&amp; instance_number(bonus_on)==0)
                heat+=2;
        }
        vspeed+=(point_distance(xx,yy,mouse_x,mouse_y)/dh)*(8-floor(heat/100)*3);
    }
    if(device_mouse_x(0)&gt;xx)
    { 
        if(shoot_left)
        {
            shoot_left=0;
            alarm[5]=room_speed*0.2;
            inst=instance_create(x-16,y,parent_blast);
            with(inst)
            {
                speed = 32;
                direction = 180;
            }
            if(heat&lt;100 &amp;&amp; instance_number(bonus_on)==0)
                heat+=2.5;
        }
        hspeed+=(point_distance(xx,yy,mouse_x,mouse_y)/dw)*(8-floor(heat/100)*3);
    }
    else if(device_mouse_x(0)&lt;xx)
    { 
        if(shoot_right)
        {
            shoot_right=0;
            alarm[6]=room_speed*0.2;
            inst=instance_create(x+16,y,parent_blast);
            with(inst)
            {
                speed = 32;
                direction = 0;
            }
            if(heat&lt;100 &amp;&amp; instance_number(bonus_on)==0)
                heat+=2.5;
        }
        hspeed-=(point_distance(xx,yy,mouse_x,mouse_y)/dw)*(8-floor(heat/100)*3);
    }
    move_towards_point(mouse_x,mouse_y-dh*0.75,speed);
}

 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handling the collision with a crystal

//Horizontal collisions
cid = instance_position(x+sprite_width/2, y, parent_crystal);//A crystal that is positioned right to the player
if(cid != noone)
{
    x=cid.x-cid.sprite_width/2-sprite_width/2-1;
    /*We substract 1 in order to prevent the player from being stuck to the crystal he's colliding with.
      We substract sprite_width/2 in order to move the right most point on the player's sprite*/
    hspeed=0;
}
else
{
    cid = instance_position(x-sprite_width/2, y, parent_crystal);//A crystal that is positioned left to the player
    if(cid != noone)
    {
        x=cid.x+cid.sprite_width/2+sprite_width/2+1;
        /*We add 1 in order to prevent the player from being stuck to the crystal he's colliding with.
          We add sprite_width/2 in order to move the left most point on the player's sprite*/
        hspeed=0;
    }
}


//Vertical collisions
cid = instance_position(x, y+sprite_height/2, parent_crystal);//The crystal is below the player
if(cid != noone)//If the player is above a crystal that is going up
{
    if(cid.vspeed&lt;0)//If the player is above a crystal that is going up
    {
        y = cid.y-cid.sprite_height/2-sprite_height/2-1;//Same as horizontal collision
        vspeed = cid.vspeed;
    }
    else vspeed = 0;//Applies to the case in which the player is below a crystal that is going up 
}

else//The crystal is above the player
{
    cid = instance_position(x, y-sprite_height/2, parent_crystal);
    if(cid != noone)
    {
        if(cid.vspeed&gt;0)//The player is below a crystal that is going down
        {
            y = cid.y+cid.sprite_height/2+sprite_height/2+1;//Same as horizontal collision
            vspeed = cid.vspeed;
        }
        else vspeed = 0;//Applies to the case in which the player is above a crystal that is going down 
    }
}




    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handling the collision with the bonus diamond
if(room==room_game &amp;&amp; global.in_bonus )
{
    //Horizontal collisions
    if(position_meeting(x+sprite_width/2, y, bonus_crystal_obj))
    {
        x = bonus_crystal_obj.x-bonus_crystal_obj.sprite_width/2-sprite_width/2-1;//The same principal as the one used in collisions with a regular crystal is applied here
        hspeed = 0;
    }
    else if(position_meeting(x-sprite_width/2, y, bonus_crystal_obj))
    {
        x = bonus_crystal_obj.x+bonus_crystal_obj.sprite_width/2+sprite_width/2+1;//The same principal as the one used in collision with a regular crystal is applied here
        hspeed = 0;
    }
    else//Vertical collisions
    {
        if(position_meeting(x, y-sprite_height/2, bonus_crystal_obj))//The player is below the bonus crystal
        {
            y = bonus_crystal_obj.y+bonus_crystal_obj.sprite_height/2+sprite_height/2+1;//Same as horizontal collision
            vspeed = bonus_crystal_obj.vspeed;
        }
        else if(position_meeting(x, y+sprite_height/2, bonus_crystal_obj)) vspeed = 0;//The player is above the bonus crystal
    }  
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Limiting the player's speed and position on screen, also making the player invulnerable in case he gets hit
if (keyboard_check(vk_left) and keyboard_check(vk_right))
    speed=0;

//Making sure the player can't go beyond the upper and lower screen boundries
if(y&gt;room_height) {y=room_height; vspeed=0;}

if(y&lt;64) {y=64; vspeed=0;}

if(x&lt;sprite_width/2)
{
    x = sprite_width/2;
    hspeed = 0;
}

if(x+sprite_width/2&gt;room_width)
{
    x = room_width-sprite_width/2;
    hspeed = 0;
}


if(global.hurt)//Making the player temporarly invulnerable
{
    if(flag==0)
        flag=1;
    else if(flag==1)
        flag=0;    
}










</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handling the screen shake
view_xview[0] = clamp(view_xview[0],0,room_width-view_wview[0]);
view_yview[0] = clamp(view_yview[0],0,room_height-view_hview[0]);
view_xview[0] += random_range(-shake,shake);
view_yview[0] += random_range(-shake,shake);
if(distance_to_object(parent_obstacle)&lt;80 || distance_to_object(target_obj)&lt;80)
    shake = 11;
else shake = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handling the heat
if(heat&gt;100)
    heat = 100;
if(heat==100 &amp;&amp; toCool)
{
    playSound(overheat,1,false);
    toCool = false;
    alarm[2] = room_speed*5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="parent_obstacle">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.hp</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room_speed*3</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drawing the hits the player has acquired

for(var i=0;i&lt;global.hp;i++)
    draw_sprite_ext(hp_sprt,-1,(sprite_get_width(up_button)+340+100+i*30)*global.gui_xscale,60*global.gui_yscale,
    global.gui_xscale*(32/sprite_get_width(hp_sprt)),global.gui_yscale*(32/sprite_get_height(hp_sprt)),0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>flag</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drawing the heat bar
//These values need to be updated to match the current position of the player
bary1 = y-43;
bary2 = y-6;
draw_set_colour(c_red);
draw_rectangle(x+37,bary2-heat*(heat_bar_height/100),x+41,bary2,false);
  

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handling the drawing of the smoke
if(heat==100) effect_create_above(ef_smokeup,x,bary1,0.5,c_gray); 

             

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,32</point>
    <point>48,0</point>
    <point>96,32</point>
    <point>64,96</point>
    <point>32,96</point>
  </PhysicsShapePoints>
</object>
